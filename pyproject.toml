[project]
name = "ember_mug_component"
readme = "README.md"
description = "Home Assistant Custom Integration for Ember Mugs."
authors = [
    { name = "Jesse Sopel", email = "jesse.sopel@gmail.com" },
]
license = { file = "LICENSE.md" }
requires-python = ">=3.12"
dynamic = ["version"]
classifiers=[
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "homeassistant>=2024.8.1",
    "bleak-retry-connector>=3.5.0",
    "bleak>=0.22.2",
    "python-ember-mug==1.1.0",
]

[project.optional-dependencies]
test = [
  "pytest>=7.2.1",
  "pytest-cov>=3.0.0",
  "pytest-asyncio>=0.20.2",
  "home-assistant-bluetooth",
  "pytest-homeassistant-custom-component",
  # Requirements for HASS
  "pyserial>=3.5",  # For HASS serial component
  "bluetooth-auto-recovery>=1.4.2",  # For HASS Bluetooth component
  "pyudev==0.24.3",  # For HASS usb component
]

[project.urls]
"Source code" = "https://github.com/sopelj/hass-ember-mug-component/"
"Bug Tracker" = "https://github.com/sopelj/hass-ember-mug-component/issues"
"Changelog" = "https://github.com/sopelj/hass-ember-mug-component/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "custom_components/ember_mug/manifest.json"
pattern = "\"version\": \"(?P<version>[^\"]+)"

[tool.hatch.envs.default]
python = "3.13"

[tool.hatch.envs.test]
features = ["test"]

[[tool.hatch.envs.test.matrix]]
python = ["3.12"]
homeassistant = ["2024.8.3", "2024.10.4"]

[[tool.hatch.envs.test.matrix]]
python = ["3.13"]
homeassistant = ["2024.12"]

[tool.hatch.envs.test.scripts]
cov = "pytest --asyncio-mode=auto --cov=custom_components --cov-branch --cov-report=xml --cov-report=term-missing tests -vvv"
no-cov = "cov --no-cov"

[tool.black]
line-length = 120
target-version = ["py312"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "def main",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]

[tool.ruff]
fix = true
line-length = 120
target-version = "py312"
[tool.ruff.lint]
select = [
    "A",
    "ASYNC",
    "B",
    "COM",
    "C4",
    "D",
    "E",
    "ERA",
    "F",
    "FA",
    "FLY",
    "G",
    "I",
    "N",
    "PTH",
    "PT",
    "PL",
    "PLE",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SLF",
    "SIM",
    "TD",
    "TCH",
    "UP",
]
ignore = ["D203", "D212", "PLR2004", "PLR0913", "RUF012"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "D103",  # No docstrings in tests needed
    "S101",  # We needs asserts in tests
    "SLF001",
]

[tool.mypy]
ignore_errors = true
ignore_missing_imports = false
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
